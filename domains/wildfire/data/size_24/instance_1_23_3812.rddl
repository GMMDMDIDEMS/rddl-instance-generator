non-fluents nf_wildfire_mdp__1_23 {
    domain = wildfire_mdp;
    objects {
        x_pos : {x1};
        y_pos : {y1,y2,y3,y4,y5,y6,y7,y8,y9,y10,y11,y12,y13,y14,y15,y16,y17,y18,y19,y20,y21,y22,y23};
    };
    non-fluents {
        NEIGHBOR(x1,y1,x1,y1);
        NEIGHBOR(x1,y1,x1,y5);
        NEIGHBOR(x1,y1,x1,y8);
        NEIGHBOR(x1,y1,x1,y9);
        NEIGHBOR(x1,y1,x1,y11);
        NEIGHBOR(x1,y1,x1,y12);
        NEIGHBOR(x1,y1,x1,y14);
        NEIGHBOR(x1,y1,x1,y15);
        NEIGHBOR(x1,y1,x1,y17);
        NEIGHBOR(x1,y1,x1,y18);
        NEIGHBOR(x1,y1,x1,y20);
        NEIGHBOR(x1,y1,x1,y21);
        NEIGHBOR(x1,y1,x1,y22);
        NEIGHBOR(x1,y1,x1,y23);
        NEIGHBOR(x1,y2,x1,y1);
        NEIGHBOR(x1,y2,x1,y2);
        NEIGHBOR(x1,y2,x1,y3);
        NEIGHBOR(x1,y2,x1,y4);
        NEIGHBOR(x1,y2,x1,y7);
        NEIGHBOR(x1,y2,x1,y8);
        NEIGHBOR(x1,y2,x1,y9);
        NEIGHBOR(x1,y2,x1,y10);
        NEIGHBOR(x1,y2,x1,y11);
        NEIGHBOR(x1,y2,x1,y12);
        NEIGHBOR(x1,y2,x1,y16);
        NEIGHBOR(x1,y2,x1,y17);
        NEIGHBOR(x1,y2,x1,y18);
        NEIGHBOR(x1,y2,x1,y19);
        NEIGHBOR(x1,y2,x1,y20);
        NEIGHBOR(x1,y2,x1,y21);
        NEIGHBOR(x1,y2,x1,y23);
        NEIGHBOR(x1,y3,x1,y1);
        NEIGHBOR(x1,y3,x1,y4);
        NEIGHBOR(x1,y3,x1,y5);
        NEIGHBOR(x1,y3,x1,y6);
        NEIGHBOR(x1,y3,x1,y8);
        NEIGHBOR(x1,y3,x1,y10);
        NEIGHBOR(x1,y3,x1,y13);
        NEIGHBOR(x1,y3,x1,y14);
        NEIGHBOR(x1,y3,x1,y15);
        NEIGHBOR(x1,y3,x1,y16);
        NEIGHBOR(x1,y3,x1,y17);
        NEIGHBOR(x1,y3,x1,y20);
        NEIGHBOR(x1,y3,x1,y21);
        NEIGHBOR(x1,y3,x1,y22);
        NEIGHBOR(x1,y4,x1,y1);
        NEIGHBOR(x1,y4,x1,y2);
        NEIGHBOR(x1,y4,x1,y3);
        NEIGHBOR(x1,y4,x1,y5);
        NEIGHBOR(x1,y4,x1,y9);
        NEIGHBOR(x1,y4,x1,y13);
        NEIGHBOR(x1,y4,x1,y14);
        NEIGHBOR(x1,y4,x1,y17);
        NEIGHBOR(x1,y4,x1,y18);
        NEIGHBOR(x1,y4,x1,y19);
        NEIGHBOR(x1,y4,x1,y21);
        NEIGHBOR(x1,y4,x1,y22);
        NEIGHBOR(x1,y4,x1,y23);
        NEIGHBOR(x1,y5,x1,y1);
        NEIGHBOR(x1,y5,x1,y2);
        NEIGHBOR(x1,y5,x1,y3);
        NEIGHBOR(x1,y5,x1,y5);
        NEIGHBOR(x1,y5,x1,y6);
        NEIGHBOR(x1,y5,x1,y7);
        NEIGHBOR(x1,y5,x1,y8);
        NEIGHBOR(x1,y5,x1,y10);
        NEIGHBOR(x1,y5,x1,y12);
        NEIGHBOR(x1,y5,x1,y13);
        NEIGHBOR(x1,y5,x1,y14);
        NEIGHBOR(x1,y5,x1,y15);
        NEIGHBOR(x1,y5,x1,y16);
        NEIGHBOR(x1,y5,x1,y17);
        NEIGHBOR(x1,y5,x1,y19);
        NEIGHBOR(x1,y5,x1,y20);
        NEIGHBOR(x1,y5,x1,y21);
        NEIGHBOR(x1,y5,x1,y22);
        NEIGHBOR(x1,y6,x1,y1);
        NEIGHBOR(x1,y6,x1,y2);
        NEIGHBOR(x1,y6,x1,y4);
        NEIGHBOR(x1,y6,x1,y5);
        NEIGHBOR(x1,y6,x1,y6);
        NEIGHBOR(x1,y6,x1,y7);
        NEIGHBOR(x1,y6,x1,y8);
        NEIGHBOR(x1,y6,x1,y9);
        NEIGHBOR(x1,y6,x1,y11);
        NEIGHBOR(x1,y6,x1,y13);
        NEIGHBOR(x1,y6,x1,y15);
        NEIGHBOR(x1,y6,x1,y16);
        NEIGHBOR(x1,y6,x1,y17);
        NEIGHBOR(x1,y6,x1,y19);
        NEIGHBOR(x1,y6,x1,y20);
        NEIGHBOR(x1,y6,x1,y21);
        NEIGHBOR(x1,y6,x1,y22);
        NEIGHBOR(x1,y7,x1,y1);
        NEIGHBOR(x1,y7,x1,y5);
        NEIGHBOR(x1,y7,x1,y6);
        NEIGHBOR(x1,y7,x1,y10);
        NEIGHBOR(x1,y7,x1,y12);
        NEIGHBOR(x1,y7,x1,y13);
        NEIGHBOR(x1,y7,x1,y17);
        NEIGHBOR(x1,y7,x1,y18);
        NEIGHBOR(x1,y7,x1,y19);
        NEIGHBOR(x1,y7,x1,y21);
        NEIGHBOR(x1,y7,x1,y22);
        NEIGHBOR(x1,y8,x1,y1);
        NEIGHBOR(x1,y8,x1,y6);
        NEIGHBOR(x1,y8,x1,y8);
        NEIGHBOR(x1,y8,x1,y9);
        NEIGHBOR(x1,y8,x1,y10);
        NEIGHBOR(x1,y8,x1,y11);
        NEIGHBOR(x1,y8,x1,y12);
        NEIGHBOR(x1,y8,x1,y13);
        NEIGHBOR(x1,y8,x1,y14);
        NEIGHBOR(x1,y8,x1,y19);
        NEIGHBOR(x1,y8,x1,y20);
        NEIGHBOR(x1,y8,x1,y22);
        NEIGHBOR(x1,y8,x1,y23);
        NEIGHBOR(x1,y9,x1,y1);
        NEIGHBOR(x1,y9,x1,y3);
        NEIGHBOR(x1,y9,x1,y6);
        NEIGHBOR(x1,y9,x1,y7);
        NEIGHBOR(x1,y9,x1,y9);
        NEIGHBOR(x1,y9,x1,y10);
        NEIGHBOR(x1,y9,x1,y11);
        NEIGHBOR(x1,y9,x1,y14);
        NEIGHBOR(x1,y9,x1,y16);
        NEIGHBOR(x1,y9,x1,y18);
        NEIGHBOR(x1,y9,x1,y19);
        NEIGHBOR(x1,y10,x1,y2);
        NEIGHBOR(x1,y10,x1,y3);
        NEIGHBOR(x1,y10,x1,y4);
        NEIGHBOR(x1,y10,x1,y5);
        NEIGHBOR(x1,y10,x1,y11);
        NEIGHBOR(x1,y10,x1,y12);
        NEIGHBOR(x1,y10,x1,y18);
        NEIGHBOR(x1,y10,x1,y21);
        NEIGHBOR(x1,y10,x1,y23);
        NEIGHBOR(x1,y11,x1,y1);
        NEIGHBOR(x1,y11,x1,y3);
        NEIGHBOR(x1,y11,x1,y6);
        NEIGHBOR(x1,y11,x1,y10);
        NEIGHBOR(x1,y11,x1,y11);
        NEIGHBOR(x1,y11,x1,y13);
        NEIGHBOR(x1,y11,x1,y14);
        NEIGHBOR(x1,y11,x1,y15);
        NEIGHBOR(x1,y11,x1,y16);
        NEIGHBOR(x1,y11,x1,y17);
        NEIGHBOR(x1,y11,x1,y18);
        NEIGHBOR(x1,y11,x1,y19);
        NEIGHBOR(x1,y11,x1,y22);
        NEIGHBOR(x1,y12,x1,y1);
        NEIGHBOR(x1,y12,x1,y5);
        NEIGHBOR(x1,y12,x1,y7);
        NEIGHBOR(x1,y12,x1,y8);
        NEIGHBOR(x1,y12,x1,y9);
        NEIGHBOR(x1,y12,x1,y11);
        NEIGHBOR(x1,y12,x1,y12);
        NEIGHBOR(x1,y12,x1,y13);
        NEIGHBOR(x1,y12,x1,y15);
        NEIGHBOR(x1,y12,x1,y16);
        NEIGHBOR(x1,y12,x1,y17);
        NEIGHBOR(x1,y12,x1,y20);
        NEIGHBOR(x1,y12,x1,y21);
        NEIGHBOR(x1,y12,x1,y22);
        NEIGHBOR(x1,y13,x1,y2);
        NEIGHBOR(x1,y13,x1,y3);
        NEIGHBOR(x1,y13,x1,y4);
        NEIGHBOR(x1,y13,x1,y6);
        NEIGHBOR(x1,y13,x1,y7);
        NEIGHBOR(x1,y13,x1,y8);
        NEIGHBOR(x1,y13,x1,y12);
        NEIGHBOR(x1,y13,x1,y14);
        NEIGHBOR(x1,y13,x1,y15);
        NEIGHBOR(x1,y13,x1,y17);
        NEIGHBOR(x1,y13,x1,y18);
        NEIGHBOR(x1,y13,x1,y20);
        NEIGHBOR(x1,y13,x1,y21);
        NEIGHBOR(x1,y13,x1,y22);
        NEIGHBOR(x1,y14,x1,y3);
        NEIGHBOR(x1,y14,x1,y4);
        NEIGHBOR(x1,y14,x1,y6);
        NEIGHBOR(x1,y14,x1,y7);
        NEIGHBOR(x1,y14,x1,y8);
        NEIGHBOR(x1,y14,x1,y9);
        NEIGHBOR(x1,y14,x1,y10);
        NEIGHBOR(x1,y14,x1,y12);
        NEIGHBOR(x1,y14,x1,y13);
        NEIGHBOR(x1,y14,x1,y14);
        NEIGHBOR(x1,y14,x1,y16);
        NEIGHBOR(x1,y14,x1,y17);
        NEIGHBOR(x1,y14,x1,y18);
        NEIGHBOR(x1,y14,x1,y22);
        NEIGHBOR(x1,y14,x1,y23);
        NEIGHBOR(x1,y15,x1,y1);
        NEIGHBOR(x1,y15,x1,y2);
        NEIGHBOR(x1,y15,x1,y7);
        NEIGHBOR(x1,y15,x1,y9);
        NEIGHBOR(x1,y15,x1,y10);
        NEIGHBOR(x1,y15,x1,y12);
        NEIGHBOR(x1,y15,x1,y15);
        NEIGHBOR(x1,y15,x1,y17);
        NEIGHBOR(x1,y15,x1,y18);
        NEIGHBOR(x1,y15,x1,y20);
        NEIGHBOR(x1,y15,x1,y23);
        NEIGHBOR(x1,y16,x1,y2);
        NEIGHBOR(x1,y16,x1,y5);
        NEIGHBOR(x1,y16,x1,y7);
        NEIGHBOR(x1,y16,x1,y11);
        NEIGHBOR(x1,y16,x1,y13);
        NEIGHBOR(x1,y16,x1,y14);
        NEIGHBOR(x1,y16,x1,y15);
        NEIGHBOR(x1,y16,x1,y16);
        NEIGHBOR(x1,y16,x1,y17);
        NEIGHBOR(x1,y16,x1,y18);
        NEIGHBOR(x1,y16,x1,y19);
        NEIGHBOR(x1,y16,x1,y20);
        NEIGHBOR(x1,y17,x1,y2);
        NEIGHBOR(x1,y17,x1,y5);
        NEIGHBOR(x1,y17,x1,y6);
        NEIGHBOR(x1,y17,x1,y9);
        NEIGHBOR(x1,y17,x1,y10);
        NEIGHBOR(x1,y17,x1,y12);
        NEIGHBOR(x1,y17,x1,y14);
        NEIGHBOR(x1,y17,x1,y18);
        NEIGHBOR(x1,y17,x1,y20);
        NEIGHBOR(x1,y17,x1,y23);
        NEIGHBOR(x1,y18,x1,y4);
        NEIGHBOR(x1,y18,x1,y5);
        NEIGHBOR(x1,y18,x1,y6);
        NEIGHBOR(x1,y18,x1,y9);
        NEIGHBOR(x1,y18,x1,y10);
        NEIGHBOR(x1,y18,x1,y15);
        NEIGHBOR(x1,y18,x1,y17);
        NEIGHBOR(x1,y18,x1,y19);
        NEIGHBOR(x1,y18,x1,y21);
        NEIGHBOR(x1,y18,x1,y23);
        NEIGHBOR(x1,y19,x1,y4);
        NEIGHBOR(x1,y19,x1,y12);
        NEIGHBOR(x1,y19,x1,y13);
        NEIGHBOR(x1,y19,x1,y14);
        NEIGHBOR(x1,y19,x1,y15);
        NEIGHBOR(x1,y19,x1,y18);
        NEIGHBOR(x1,y19,x1,y20);
        NEIGHBOR(x1,y19,x1,y21);
        NEIGHBOR(x1,y20,x1,y2);
        NEIGHBOR(x1,y20,x1,y3);
        NEIGHBOR(x1,y20,x1,y4);
        NEIGHBOR(x1,y20,x1,y6);
        NEIGHBOR(x1,y20,x1,y7);
        NEIGHBOR(x1,y20,x1,y8);
        NEIGHBOR(x1,y20,x1,y10);
        NEIGHBOR(x1,y20,x1,y12);
        NEIGHBOR(x1,y20,x1,y15);
        NEIGHBOR(x1,y20,x1,y16);
        NEIGHBOR(x1,y20,x1,y19);
        NEIGHBOR(x1,y20,x1,y20);
        NEIGHBOR(x1,y20,x1,y21);
        NEIGHBOR(x1,y20,x1,y23);
        NEIGHBOR(x1,y21,x1,y1);
        NEIGHBOR(x1,y21,x1,y2);
        NEIGHBOR(x1,y21,x1,y4);
        NEIGHBOR(x1,y21,x1,y5);
        NEIGHBOR(x1,y21,x1,y7);
        NEIGHBOR(x1,y21,x1,y8);
        NEIGHBOR(x1,y21,x1,y9);
        NEIGHBOR(x1,y21,x1,y11);
        NEIGHBOR(x1,y21,x1,y14);
        NEIGHBOR(x1,y21,x1,y15);
        NEIGHBOR(x1,y21,x1,y17);
        NEIGHBOR(x1,y21,x1,y19);
        NEIGHBOR(x1,y21,x1,y22);
        NEIGHBOR(x1,y22,x1,y1);
        NEIGHBOR(x1,y22,x1,y7);
        NEIGHBOR(x1,y22,x1,y8);
        NEIGHBOR(x1,y22,x1,y9);
        NEIGHBOR(x1,y22,x1,y10);
        NEIGHBOR(x1,y22,x1,y11);
        NEIGHBOR(x1,y22,x1,y13);
        NEIGHBOR(x1,y22,x1,y18);
        NEIGHBOR(x1,y22,x1,y20);
        NEIGHBOR(x1,y22,x1,y21);
        NEIGHBOR(x1,y23,x1,y3);
        NEIGHBOR(x1,y23,x1,y4);
        NEIGHBOR(x1,y23,x1,y5);
        NEIGHBOR(x1,y23,x1,y7);
        NEIGHBOR(x1,y23,x1,y8);
        NEIGHBOR(x1,y23,x1,y9);
        NEIGHBOR(x1,y23,x1,y11);
        NEIGHBOR(x1,y23,x1,y12);
        NEIGHBOR(x1,y23,x1,y15);
        NEIGHBOR(x1,y23,x1,y16);
        NEIGHBOR(x1,y23,x1,y17);
        NEIGHBOR(x1,y23,x1,y18);
        NEIGHBOR(x1,y23,x1,y19);
        NEIGHBOR(x1,y23,x1,y20);
        NEIGHBOR(x1,y23,x1,y22);
        TARGET(x1,y1);
        TARGET(x1,y10);
    };
}

instance inst_wildfire_mdp__1_23 {
    domain = wildfire_mdp;
    non-fluents = nf_wildfire_mdp__1_23;
    init-state {
        burning(x1,y1);
        burning(x1,y3);
        burning(x1,y10);
        burning(x1,y23);
        out-of-fuel(x1,y1);
        out-of-fuel(x1,y10);
    };
    max-nondef-actions = 1;
    horizon = 40;
    discount = 1.0;
}