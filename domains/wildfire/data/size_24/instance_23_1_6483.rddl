non-fluents nf_wildfire_mdp__23_1 {
    domain = wildfire_mdp;
    objects {
        x_pos : {x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23};
        y_pos : {y1};
    };
    non-fluents {
        NEIGHBOR(x1,y1,x1,y1);
        NEIGHBOR(x1,y1,x3,y1);
        NEIGHBOR(x1,y1,x5,y1);
        NEIGHBOR(x1,y1,x6,y1);
        NEIGHBOR(x1,y1,x9,y1);
        NEIGHBOR(x1,y1,x10,y1);
        NEIGHBOR(x1,y1,x11,y1);
        NEIGHBOR(x1,y1,x12,y1);
        NEIGHBOR(x1,y1,x13,y1);
        NEIGHBOR(x1,y1,x14,y1);
        NEIGHBOR(x1,y1,x15,y1);
        NEIGHBOR(x1,y1,x17,y1);
        NEIGHBOR(x1,y1,x18,y1);
        NEIGHBOR(x1,y1,x20,y1);
        NEIGHBOR(x1,y1,x22,y1);
        NEIGHBOR(x2,y1,x2,y1);
        NEIGHBOR(x2,y1,x3,y1);
        NEIGHBOR(x2,y1,x4,y1);
        NEIGHBOR(x2,y1,x5,y1);
        NEIGHBOR(x2,y1,x6,y1);
        NEIGHBOR(x2,y1,x7,y1);
        NEIGHBOR(x2,y1,x9,y1);
        NEIGHBOR(x2,y1,x10,y1);
        NEIGHBOR(x2,y1,x12,y1);
        NEIGHBOR(x2,y1,x13,y1);
        NEIGHBOR(x2,y1,x16,y1);
        NEIGHBOR(x2,y1,x18,y1);
        NEIGHBOR(x2,y1,x19,y1);
        NEIGHBOR(x2,y1,x20,y1);
        NEIGHBOR(x2,y1,x21,y1);
        NEIGHBOR(x2,y1,x22,y1);
        NEIGHBOR(x3,y1,x2,y1);
        NEIGHBOR(x3,y1,x3,y1);
        NEIGHBOR(x3,y1,x5,y1);
        NEIGHBOR(x3,y1,x8,y1);
        NEIGHBOR(x3,y1,x9,y1);
        NEIGHBOR(x3,y1,x11,y1);
        NEIGHBOR(x3,y1,x14,y1);
        NEIGHBOR(x3,y1,x16,y1);
        NEIGHBOR(x3,y1,x18,y1);
        NEIGHBOR(x3,y1,x19,y1);
        NEIGHBOR(x3,y1,x23,y1);
        NEIGHBOR(x4,y1,x1,y1);
        NEIGHBOR(x4,y1,x3,y1);
        NEIGHBOR(x4,y1,x4,y1);
        NEIGHBOR(x4,y1,x5,y1);
        NEIGHBOR(x4,y1,x6,y1);
        NEIGHBOR(x4,y1,x7,y1);
        NEIGHBOR(x4,y1,x8,y1);
        NEIGHBOR(x4,y1,x9,y1);
        NEIGHBOR(x4,y1,x10,y1);
        NEIGHBOR(x4,y1,x11,y1);
        NEIGHBOR(x4,y1,x12,y1);
        NEIGHBOR(x4,y1,x14,y1);
        NEIGHBOR(x4,y1,x16,y1);
        NEIGHBOR(x4,y1,x17,y1);
        NEIGHBOR(x4,y1,x18,y1);
        NEIGHBOR(x4,y1,x19,y1);
        NEIGHBOR(x4,y1,x21,y1);
        NEIGHBOR(x4,y1,x22,y1);
        NEIGHBOR(x5,y1,x3,y1);
        NEIGHBOR(x5,y1,x5,y1);
        NEIGHBOR(x5,y1,x6,y1);
        NEIGHBOR(x5,y1,x8,y1);
        NEIGHBOR(x5,y1,x10,y1);
        NEIGHBOR(x5,y1,x11,y1);
        NEIGHBOR(x5,y1,x12,y1);
        NEIGHBOR(x5,y1,x13,y1);
        NEIGHBOR(x5,y1,x15,y1);
        NEIGHBOR(x5,y1,x16,y1);
        NEIGHBOR(x5,y1,x18,y1);
        NEIGHBOR(x5,y1,x19,y1);
        NEIGHBOR(x5,y1,x20,y1);
        NEIGHBOR(x5,y1,x22,y1);
        NEIGHBOR(x6,y1,x1,y1);
        NEIGHBOR(x6,y1,x3,y1);
        NEIGHBOR(x6,y1,x5,y1);
        NEIGHBOR(x6,y1,x6,y1);
        NEIGHBOR(x6,y1,x7,y1);
        NEIGHBOR(x6,y1,x8,y1);
        NEIGHBOR(x6,y1,x9,y1);
        NEIGHBOR(x6,y1,x11,y1);
        NEIGHBOR(x6,y1,x12,y1);
        NEIGHBOR(x6,y1,x13,y1);
        NEIGHBOR(x6,y1,x15,y1);
        NEIGHBOR(x6,y1,x16,y1);
        NEIGHBOR(x6,y1,x17,y1);
        NEIGHBOR(x6,y1,x20,y1);
        NEIGHBOR(x7,y1,x1,y1);
        NEIGHBOR(x7,y1,x2,y1);
        NEIGHBOR(x7,y1,x3,y1);
        NEIGHBOR(x7,y1,x6,y1);
        NEIGHBOR(x7,y1,x7,y1);
        NEIGHBOR(x7,y1,x8,y1);
        NEIGHBOR(x7,y1,x10,y1);
        NEIGHBOR(x7,y1,x11,y1);
        NEIGHBOR(x7,y1,x13,y1);
        NEIGHBOR(x7,y1,x14,y1);
        NEIGHBOR(x7,y1,x16,y1);
        NEIGHBOR(x7,y1,x18,y1);
        NEIGHBOR(x7,y1,x21,y1);
        NEIGHBOR(x7,y1,x23,y1);
        NEIGHBOR(x8,y1,x1,y1);
        NEIGHBOR(x8,y1,x2,y1);
        NEIGHBOR(x8,y1,x3,y1);
        NEIGHBOR(x8,y1,x6,y1);
        NEIGHBOR(x8,y1,x7,y1);
        NEIGHBOR(x8,y1,x8,y1);
        NEIGHBOR(x8,y1,x9,y1);
        NEIGHBOR(x8,y1,x11,y1);
        NEIGHBOR(x8,y1,x13,y1);
        NEIGHBOR(x8,y1,x14,y1);
        NEIGHBOR(x8,y1,x15,y1);
        NEIGHBOR(x8,y1,x16,y1);
        NEIGHBOR(x8,y1,x18,y1);
        NEIGHBOR(x8,y1,x19,y1);
        NEIGHBOR(x8,y1,x23,y1);
        NEIGHBOR(x9,y1,x2,y1);
        NEIGHBOR(x9,y1,x4,y1);
        NEIGHBOR(x9,y1,x5,y1);
        NEIGHBOR(x9,y1,x7,y1);
        NEIGHBOR(x9,y1,x8,y1);
        NEIGHBOR(x9,y1,x9,y1);
        NEIGHBOR(x9,y1,x10,y1);
        NEIGHBOR(x9,y1,x13,y1);
        NEIGHBOR(x9,y1,x14,y1);
        NEIGHBOR(x9,y1,x16,y1);
        NEIGHBOR(x9,y1,x17,y1);
        NEIGHBOR(x9,y1,x18,y1);
        NEIGHBOR(x9,y1,x20,y1);
        NEIGHBOR(x9,y1,x23,y1);
        NEIGHBOR(x10,y1,x1,y1);
        NEIGHBOR(x10,y1,x2,y1);
        NEIGHBOR(x10,y1,x3,y1);
        NEIGHBOR(x10,y1,x4,y1);
        NEIGHBOR(x10,y1,x9,y1);
        NEIGHBOR(x10,y1,x10,y1);
        NEIGHBOR(x10,y1,x11,y1);
        NEIGHBOR(x10,y1,x12,y1);
        NEIGHBOR(x10,y1,x13,y1);
        NEIGHBOR(x10,y1,x14,y1);
        NEIGHBOR(x10,y1,x17,y1);
        NEIGHBOR(x10,y1,x18,y1);
        NEIGHBOR(x10,y1,x22,y1);
        NEIGHBOR(x11,y1,x3,y1);
        NEIGHBOR(x11,y1,x6,y1);
        NEIGHBOR(x11,y1,x8,y1);
        NEIGHBOR(x11,y1,x10,y1);
        NEIGHBOR(x11,y1,x11,y1);
        NEIGHBOR(x11,y1,x12,y1);
        NEIGHBOR(x11,y1,x13,y1);
        NEIGHBOR(x11,y1,x14,y1);
        NEIGHBOR(x11,y1,x16,y1);
        NEIGHBOR(x11,y1,x18,y1);
        NEIGHBOR(x11,y1,x19,y1);
        NEIGHBOR(x11,y1,x22,y1);
        NEIGHBOR(x11,y1,x23,y1);
        NEIGHBOR(x12,y1,x1,y1);
        NEIGHBOR(x12,y1,x2,y1);
        NEIGHBOR(x12,y1,x3,y1);
        NEIGHBOR(x12,y1,x4,y1);
        NEIGHBOR(x12,y1,x5,y1);
        NEIGHBOR(x12,y1,x6,y1);
        NEIGHBOR(x12,y1,x7,y1);
        NEIGHBOR(x12,y1,x8,y1);
        NEIGHBOR(x12,y1,x9,y1);
        NEIGHBOR(x12,y1,x10,y1);
        NEIGHBOR(x12,y1,x12,y1);
        NEIGHBOR(x12,y1,x13,y1);
        NEIGHBOR(x12,y1,x14,y1);
        NEIGHBOR(x12,y1,x17,y1);
        NEIGHBOR(x12,y1,x21,y1);
        NEIGHBOR(x12,y1,x23,y1);
        NEIGHBOR(x13,y1,x1,y1);
        NEIGHBOR(x13,y1,x2,y1);
        NEIGHBOR(x13,y1,x3,y1);
        NEIGHBOR(x13,y1,x5,y1);
        NEIGHBOR(x13,y1,x7,y1);
        NEIGHBOR(x13,y1,x8,y1);
        NEIGHBOR(x13,y1,x9,y1);
        NEIGHBOR(x13,y1,x10,y1);
        NEIGHBOR(x13,y1,x15,y1);
        NEIGHBOR(x13,y1,x16,y1);
        NEIGHBOR(x13,y1,x17,y1);
        NEIGHBOR(x13,y1,x20,y1);
        NEIGHBOR(x13,y1,x21,y1);
        NEIGHBOR(x13,y1,x22,y1);
        NEIGHBOR(x13,y1,x23,y1);
        NEIGHBOR(x14,y1,x3,y1);
        NEIGHBOR(x14,y1,x4,y1);
        NEIGHBOR(x14,y1,x7,y1);
        NEIGHBOR(x14,y1,x10,y1);
        NEIGHBOR(x14,y1,x11,y1);
        NEIGHBOR(x14,y1,x14,y1);
        NEIGHBOR(x14,y1,x16,y1);
        NEIGHBOR(x14,y1,x18,y1);
        NEIGHBOR(x14,y1,x19,y1);
        NEIGHBOR(x14,y1,x23,y1);
        NEIGHBOR(x15,y1,x1,y1);
        NEIGHBOR(x15,y1,x4,y1);
        NEIGHBOR(x15,y1,x6,y1);
        NEIGHBOR(x15,y1,x7,y1);
        NEIGHBOR(x15,y1,x8,y1);
        NEIGHBOR(x15,y1,x13,y1);
        NEIGHBOR(x15,y1,x16,y1);
        NEIGHBOR(x15,y1,x18,y1);
        NEIGHBOR(x15,y1,x19,y1);
        NEIGHBOR(x15,y1,x20,y1);
        NEIGHBOR(x15,y1,x22,y1);
        NEIGHBOR(x15,y1,x23,y1);
        NEIGHBOR(x16,y1,x2,y1);
        NEIGHBOR(x16,y1,x3,y1);
        NEIGHBOR(x16,y1,x4,y1);
        NEIGHBOR(x16,y1,x7,y1);
        NEIGHBOR(x16,y1,x12,y1);
        NEIGHBOR(x16,y1,x16,y1);
        NEIGHBOR(x16,y1,x17,y1);
        NEIGHBOR(x16,y1,x18,y1);
        NEIGHBOR(x16,y1,x20,y1);
        NEIGHBOR(x16,y1,x21,y1);
        NEIGHBOR(x16,y1,x22,y1);
        NEIGHBOR(x16,y1,x23,y1);
        NEIGHBOR(x17,y1,x1,y1);
        NEIGHBOR(x17,y1,x2,y1);
        NEIGHBOR(x17,y1,x3,y1);
        NEIGHBOR(x17,y1,x4,y1);
        NEIGHBOR(x17,y1,x5,y1);
        NEIGHBOR(x17,y1,x6,y1);
        NEIGHBOR(x17,y1,x7,y1);
        NEIGHBOR(x17,y1,x9,y1);
        NEIGHBOR(x17,y1,x10,y1);
        NEIGHBOR(x17,y1,x11,y1);
        NEIGHBOR(x17,y1,x13,y1);
        NEIGHBOR(x17,y1,x15,y1);
        NEIGHBOR(x17,y1,x17,y1);
        NEIGHBOR(x17,y1,x18,y1);
        NEIGHBOR(x17,y1,x20,y1);
        NEIGHBOR(x17,y1,x21,y1);
        NEIGHBOR(x17,y1,x22,y1);
        NEIGHBOR(x17,y1,x23,y1);
        NEIGHBOR(x18,y1,x1,y1);
        NEIGHBOR(x18,y1,x3,y1);
        NEIGHBOR(x18,y1,x6,y1);
        NEIGHBOR(x18,y1,x8,y1);
        NEIGHBOR(x18,y1,x9,y1);
        NEIGHBOR(x18,y1,x10,y1);
        NEIGHBOR(x18,y1,x11,y1);
        NEIGHBOR(x18,y1,x12,y1);
        NEIGHBOR(x18,y1,x13,y1);
        NEIGHBOR(x18,y1,x14,y1);
        NEIGHBOR(x18,y1,x15,y1);
        NEIGHBOR(x18,y1,x17,y1);
        NEIGHBOR(x18,y1,x19,y1);
        NEIGHBOR(x18,y1,x20,y1);
        NEIGHBOR(x18,y1,x21,y1);
        NEIGHBOR(x18,y1,x22,y1);
        NEIGHBOR(x19,y1,x1,y1);
        NEIGHBOR(x19,y1,x2,y1);
        NEIGHBOR(x19,y1,x3,y1);
        NEIGHBOR(x19,y1,x6,y1);
        NEIGHBOR(x19,y1,x7,y1);
        NEIGHBOR(x19,y1,x8,y1);
        NEIGHBOR(x19,y1,x9,y1);
        NEIGHBOR(x19,y1,x10,y1);
        NEIGHBOR(x19,y1,x13,y1);
        NEIGHBOR(x19,y1,x15,y1);
        NEIGHBOR(x19,y1,x17,y1);
        NEIGHBOR(x19,y1,x19,y1);
        NEIGHBOR(x19,y1,x20,y1);
        NEIGHBOR(x20,y1,x1,y1);
        NEIGHBOR(x20,y1,x4,y1);
        NEIGHBOR(x20,y1,x8,y1);
        NEIGHBOR(x20,y1,x11,y1);
        NEIGHBOR(x20,y1,x12,y1);
        NEIGHBOR(x20,y1,x13,y1);
        NEIGHBOR(x20,y1,x15,y1);
        NEIGHBOR(x20,y1,x16,y1);
        NEIGHBOR(x20,y1,x19,y1);
        NEIGHBOR(x20,y1,x20,y1);
        NEIGHBOR(x20,y1,x21,y1);
        NEIGHBOR(x20,y1,x22,y1);
        NEIGHBOR(x21,y1,x1,y1);
        NEIGHBOR(x21,y1,x2,y1);
        NEIGHBOR(x21,y1,x3,y1);
        NEIGHBOR(x21,y1,x5,y1);
        NEIGHBOR(x21,y1,x8,y1);
        NEIGHBOR(x21,y1,x9,y1);
        NEIGHBOR(x21,y1,x10,y1);
        NEIGHBOR(x21,y1,x14,y1);
        NEIGHBOR(x21,y1,x15,y1);
        NEIGHBOR(x21,y1,x20,y1);
        NEIGHBOR(x21,y1,x22,y1);
        NEIGHBOR(x21,y1,x23,y1);
        NEIGHBOR(x22,y1,x1,y1);
        NEIGHBOR(x22,y1,x2,y1);
        NEIGHBOR(x22,y1,x4,y1);
        NEIGHBOR(x22,y1,x6,y1);
        NEIGHBOR(x22,y1,x9,y1);
        NEIGHBOR(x22,y1,x10,y1);
        NEIGHBOR(x22,y1,x12,y1);
        NEIGHBOR(x22,y1,x13,y1);
        NEIGHBOR(x22,y1,x14,y1);
        NEIGHBOR(x22,y1,x15,y1);
        NEIGHBOR(x22,y1,x16,y1);
        NEIGHBOR(x22,y1,x20,y1);
        NEIGHBOR(x22,y1,x22,y1);
        NEIGHBOR(x22,y1,x23,y1);
        NEIGHBOR(x23,y1,x1,y1);
        NEIGHBOR(x23,y1,x2,y1);
        NEIGHBOR(x23,y1,x3,y1);
        NEIGHBOR(x23,y1,x4,y1);
        NEIGHBOR(x23,y1,x6,y1);
        NEIGHBOR(x23,y1,x7,y1);
        NEIGHBOR(x23,y1,x10,y1);
        NEIGHBOR(x23,y1,x11,y1);
        NEIGHBOR(x23,y1,x12,y1);
        NEIGHBOR(x23,y1,x13,y1);
        NEIGHBOR(x23,y1,x17,y1);
        NEIGHBOR(x23,y1,x19,y1);
        NEIGHBOR(x23,y1,x21,y1);
        NEIGHBOR(x23,y1,x22,y1);
        NEIGHBOR(x23,y1,x23,y1);
        TARGET(x2,y1);
        TARGET(x9,y1);
        TARGET(x17,y1);
        TARGET(x23,y1);
    };
}

instance inst_wildfire_mdp__23_1 {
    domain = wildfire_mdp;
    non-fluents = nf_wildfire_mdp__23_1;
    init-state {
        burning(x9,y1);
        burning(x12,y1);
        burning(x17,y1);
        burning(x23,y1);
        out-of-fuel(x9,y1);
        out-of-fuel(x17,y1);
        out-of-fuel(x23,y1);
    };
    max-nondef-actions = 1;
    horizon = 40;
    discount = 1.0;
}